[{"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/index.js":"1","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/App.js":"2","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/NavigationBar.js":"3","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/edit.js":"4","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Display.js":"5","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/recordList.js":"6","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/create.js":"7","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/BothCharts.js":"8","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/PieGraph.js":"9","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/LineGraph.js":"10"},{"size":289,"mtime":1667466345486,"results":"11","hashOfConfig":"12"},{"size":774,"mtime":1667716735937,"results":"13","hashOfConfig":"12"},{"size":864,"mtime":1667716894020,"results":"14","hashOfConfig":"12"},{"size":3195,"mtime":1667466345485,"results":"15","hashOfConfig":"12"},{"size":3447,"mtime":1667834925271,"results":"16","hashOfConfig":"12"},{"size":2319,"mtime":1667822110538,"results":"17","hashOfConfig":"12"},{"size":3042,"mtime":1667717775289,"results":"18","hashOfConfig":"12"},{"size":1051,"mtime":1667833586088,"results":"19","hashOfConfig":"12"},{"size":1752,"mtime":1667822925089,"results":"20","hashOfConfig":"12"},{"size":2787,"mtime":1667834862997,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6maxr4",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/index.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/App.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/NavigationBar.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/edit.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Display.js",["57"],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/recordList.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/create.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/BothCharts.js",[],[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/PieGraph.js",["58","59","60"],[],"import {Pie} from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction prop_len(str) {\n  if (str.length==2) {\n    console.log(\"len2\");\n    return str;\n  }\n  return \"0\"+str;\n}\n\nconst PieGraph = ({records}) => {\n  let tired_count=0;\n  let not_tired_count=0;\n  var currentdate = new Date();\n  var datetime = + prop_len(currentdate.getFullYear()) + \" @ \"  \n                +  prop_len(currentdate.getDate()) + \"/\"\n                + prop_len(currentdate.getMonth()+1)  + \"/\" \n                + prop_len(currentdate.getHours()) + \":\"  \n                +prop_len(currentdate.getMinutes()) + \":\" \n                + prop_len(currentdate.getSeconds());\n    //console.log(datetime);\n  for (let r in records) {\n    // if (records[r][\"_id\"]<)\n    if (records[r][\"tiredness\"]==0) {\n      tired_count+=1;\n    } else {\n      not_tired_count+=1;\n    }\n  }\n  //console.log(records);\n    const data = {\n        labels: [\"Tired\", \"Not Tired\"],\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: [tired_count, not_tired_count],\n            backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n            borderWidth: 1\n          }\n        ]\n      };\n\n      const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"% Tiredness\"\n          }\n        },\n      }\n\n      return (\n        <div>\n            <Pie data={data}  style={{padding: \"30px\"}} options={options}/>\n        </div>\n      )\n}\n\nexport default PieGraph;",[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/LineGraph.js",["61"],[],"import {Chart as ChartJS,CategoryScale,LinearScale,TimeScale,PointElement,LineElement,Title,Tooltip,Legend} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport 'chartjs-adapter-date-fns';\nimport { useState, useEffect } from \"react\";\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \n\nconst LineGraph = ({records, timeMin, timeMax}) => {  \n    const [recordsFormat, setRecordsFormat] = useState([]);\n    const [newMin, setNewMin] = useState(null);\n    const [newMax, setNewMax] = useState(null);\n\n    useEffect(() => {\n      if(timeMin !== null){\n        var nm = timeMin.substring(0,4)+\"-\"+timeMin.substring(4,6)+\"-\"+timeMin.substring(6,8)+\"T\"+timeMin.substring(8,10)+\":\"+timeMin.substring(10,12)+\":\"+timeMin.substring(12,14)+\".000Z\";\n        setNewMin(nm);\n      }\n      if(timeMax !== null){\n        var nm = timeMax.substring(0,4)+\"-\"+timeMax.substring(4,6)+\"-\"+timeMax.substring(6,8)+\"T\"+timeMax.substring(8,10)+\":\"+timeMax.substring(10,12)+\":\"+timeMax.substring(12,14)+\".000Z\";\n        setNewMax(nm);\n      }\n    }, [timeMin, timeMax])\n\n    useEffect(() => {\n      var HeartTime = [];\n      records.forEach(function (item, index) {\n        var temp = String(item.datetime);\n        if(temp !== null) {\n          var at = temp.substring(0,4)+\"-\"+temp.substring(4,6)+\"-\"+temp.substring(6,8)+\"T\"+temp.substring(8,10)+\":\"+temp.substring(10,12)+\":\"+temp.substring(12,14)+\".000Z\";\n          var dt = new Date(at);\n          HeartTime.push({x: dt, y: item.heartbeet});\n        }\n      });\n      HeartTime.sort(function(a,b){\n        return b.x - a.x;\n      });\n      setRecordsFormat(HeartTime);\n    }, [records])\n    \n\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        PointElement,\n        LineElement,\n        Title,\n        Tooltip,\n        Legend\n      );\n      \n      const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"Hearbeat vs. Time\"\n          }\n        },\n        scales: {\n          x: \n            {\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              },\n              \n              min: newMin,\n              max: newMax\n            }\n          \n        }\n      };\n            \n      const data = {\n        datasets: [\n          {\n            type: \"line\",\n            label: \"BPM (Beat Per Mintute)\",\n            data: recordsFormat,\n            tension: 0.1,\n            borderWidth: 2,\n            borderColor: 'rgb(75, 192, 192)',\n          }\n        ]\n      };\n\n      return <Line options={options} data={data} style={{padding: \"10px\"}}/>;\n}\n\nexport default LineGraph;",[],{"ruleId":"62","severity":1,"message":"63","line":31,"column":19,"nodeType":"64","messageId":"65","endLine":31,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":6,"column":17,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"62","severity":1,"message":"70","line":17,"column":7,"nodeType":"64","messageId":"65","endLine":17,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":26,"column":32,"nodeType":"68","messageId":"69","endLine":26,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":19,"column":13,"nodeType":"64","messageId":"73","endLine":19,"endColumn":15},"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'datetime' is assigned a value but never used.","no-redeclare","'nm' is already defined.","redeclared"]