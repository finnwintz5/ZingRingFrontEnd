[{"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/index.js":"1","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/App.js":"2","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Log.js":"3","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Analysis.js":"4","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/NavigationBar.js":"5","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/archived/edit.js":"6","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/archived/create.js":"7","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/BothCharts.js":"8","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/GraphLine.js":"9","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/GraphPie.js":"10"},{"size":289,"mtime":1667466345486,"results":"11","hashOfConfig":"12"},{"size":790,"mtime":1667866520269,"results":"13","hashOfConfig":"12"},{"size":2327,"mtime":1667866520272,"results":"14","hashOfConfig":"12"},{"size":3206,"mtime":1667866870379,"results":"15","hashOfConfig":"12"},{"size":870,"mtime":1667866520273,"results":"16","hashOfConfig":"12"},{"size":3264,"mtime":1667866520273,"results":"17","hashOfConfig":"12"},{"size":3071,"mtime":1667866520273,"results":"18","hashOfConfig":"12"},{"size":3004,"mtime":1667872289503,"results":"19","hashOfConfig":"12"},{"size":3271,"mtime":1667872526114,"results":"20","hashOfConfig":"12"},{"size":1423,"mtime":1667867094621,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18vghv4",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/index.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/App.js",["56"],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Log.js",["57"],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Analysis.js",["58"],[],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport BothCharts from \"./BothCharts\";\nimport './style/display.css';\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\n\nconst Display = () => {\n    const [records, setRecords] = useState([]);\n    const [latestTime, setLatestTime] = useState(null);\n    const [latestTiredness, setLatestTiredness] = useState(\"\");\n    const [latestHeartbeat, setLatestHeartbeat] = useState(\"\");\n    const [last, setLast] = useState(null);\n    const port = \"8080\";\n\n    useEffect(() => {\n        async function getRecords() {\n            const response = await fetch(`http://localhost:`+port+`/record/`);\n            //console.log(response);\n            if (!response.ok) {\n                const message = `An error occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const records = await response.json();\n            setRecords(records);\n            console.log(records[records.length-1]);\n            setLatestHeartbeat(records[records.length-1].heartbeet);\n            setLatestTiredness(records[records.length-1].tiredness);\n            setLast(String(records[records.length-1].datetime));\n            const dateString = records[records.length-1].datetime;\n            const date = parse(dateString, 'yyyyMMddHHmmss', new Date());\n            setLatestTime(date);\n            //console.log(date);\n        }\n        getRecords();\n        return;\n  }, [records.length]);\n\n      return (\n        <div style={{padding: \"50px\", paddingInline: \"200px\", backgroundColor: \"#eee\"}}>\n          <h1>Current Data</h1>\n          <Container>\n            <p style={{color: \"#999\"}}>Last Measured: {latestTime === null ? \"\" : format(latestTime, 'EEEE, MMMM do, yyyy hh:mm a')}</p>\n            <Row>\n              <Col sm={3}>\n                <Card style={{padding: \"30px\"}}>\n                  <Card.Title>Tiredness</Card.Title>\n                  <Card.Text>{latestTiredness}</Card.Text>\n                </Card>\n              </Col>\n              <Col sm={3}>\n                <Card style={{padding: \"30px\"}}>\n                  <Card.Title>Hearbeat (BPM)</Card.Title>\n                  <Card.Text>{latestHeartbeat}</Card.Text>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n          <h1>Graphs</h1>\n          <Container>\n            <BothCharts records={records} range=\"Day\"/>\n            <BothCharts records={records} range=\"Week\"/>\n            <BothCharts records={records} range=\"Month\"/>\n            <BothCharts records={records} range=\"Year\"/>\n            <BothCharts records={records} range=\"All\"/>\n        </Container>\n        </div>\n      );\n}\n \n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n \n//  // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\n// }\n\nexport default Display;",[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/NavigationBar.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/archived/edit.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/archived/create.js",[],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/BothCharts.js",["59","60","61","62","63","64","65","66","67","68"],[],"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/GraphLine.js",["69","70"],[],"import {Chart as ChartJS,CategoryScale,LinearScale,TimeScale,PointElement,LineElement,Title,Tooltip,Legend} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport 'chartjs-adapter-date-fns';\nimport { useState, useEffect } from \"react\";\nimport { set } from \"date-fns\";\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \n\nconst LineGraph = ({records, timeMin, timeMax, range}) => {  \n    const [recordsFormat, setRecordsFormat] = useState([]);\n    const [newMin, setNewMin] = useState(null);\n    const [newMax, setNewMax] = useState(null);\n    const [unitScale, setUnitScale] = useState(null);\n\n    useEffect(() => {\n      if(timeMin !== 0){\n        var nm = timeMin.substring(0,4)+\"-\"+timeMin.substring(4,6)+\"-\"+timeMin.substring(6,8)+\"T\"+timeMin.substring(8,10)+\":\"+timeMin.substring(10,12)+\":\"+timeMin.substring(12,14)+\".000Z\";\n        setNewMin(nm);\n      }\n      if(timeMax !== 0){\n        var nm = timeMax.substring(0,4)+\"-\"+timeMax.substring(4,6)+\"-\"+timeMax.substring(6,8)+\"T\"+timeMax.substring(8,10)+\":\"+timeMax.substring(10,12)+\":\"+timeMax.substring(12,14)+\".000Z\";\n        setNewMax(nm);\n      }\n    }, [timeMin, timeMax])\n\n    useEffect(() => {\n      if(range === \"Day\"){\n        setUnitScale('hour');\n      }\n      else if(range === \"Week\"){\n        setUnitScale('day');\n      }\n      else if(range === \"Month\"){\n        setUnitScale('day');\n      }\n      else if(range === \"Year\"){\n        setUnitScale('month');\n      }\n      console.log(range);\n    }, [range])\n\n    useEffect(() => {\n      var HeartTime = [];\n      records.forEach(function (item, index) {\n        var temp = String(item.datetime);\n        if(temp !== null) {\n          var at = temp.substring(0,4)+\"-\"+temp.substring(4,6)+\"-\"+temp.substring(6,8)+\"T\"+temp.substring(8,10)+\":\"+temp.substring(10,12)+\":\"+temp.substring(12,14)+\".000Z\";\n          var dt = new Date(at);\n          HeartTime.push({x: dt, y: item.heartbeet});\n        }\n      });\n      HeartTime.sort(function(a,b){\n        return b.x - a.x;\n      });\n      setRecordsFormat(HeartTime);\n    }, [records])\n    \n\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        PointElement,\n        LineElement,\n        Title,\n        Tooltip,\n        Legend\n      );\n      \n      const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"Hearbeat vs. Time\"\n          }\n        },\n        scales: {\n          x: \n            {\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              },\n              time: {\n                unit: unitScale\n            },\n              min: newMin,\n              max: newMax\n            }\n          \n        }\n      };\n            \n      const data = {\n        datasets: [\n          {\n            type: \"line\",\n            label: \"BPM (Beat Per Mintute)\",\n            data: recordsFormat,\n            tension: 0.1,\n            borderWidth: 2,\n            borderColor: 'rgb(75, 192, 192)',\n          }\n        ]\n      };\n\n      return <Line options={options} data={data} style={{padding: \"10px\"}}/>;\n}\n\nexport default LineGraph;","/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/GraphPie.js",["71"],[],"import {Pie} from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\n\nconst PieGraph = ({records,range,start_time}) => {\n  let tired_count=0;\n  let not_tired_count=0;\n  // console.log(typeof(datetime));\n  for (let r in records) {\n    // console.log(r);\n    // console.log(records[r][\"datetime\"]);\n    // console.log(start_time);\n    if (records[r][\"datetime\"]>start_time) {\n      if (records[r][\"tiredness\"]==\"Tired\") {\n        tired_count+=1;\n      } else {\n        not_tired_count+=1;\n      }\n    }\n    \n    \n  }\n  // console.log(records);\n    const data = {\n        labels: [\"Tired\", \"Not Tired\"],\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: [tired_count, not_tired_count],\n            backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n            borderWidth: 1\n          }\n        ]\n      };\n\n      const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"% Tiredness\"\n          }\n        },\n      }\n\n      return (\n        <div>\n            <Pie data={data}  style={{padding: \"30px\"}} options={options}/>\n        </div>\n      )\n}\n\nexport default PieGraph;",{"ruleId":"72","severity":1,"message":"73","line":10,"column":8,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":13,"column":12,"nodeType":"74","messageId":"75","endLine":13,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"72","severity":1,"message":"79","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":11,"column":20,"nodeType":"82","messageId":"83","endLine":11,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":31,"column":14,"nodeType":"82","messageId":"83","endLine":31,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":36,"column":14,"nodeType":"82","messageId":"83","endLine":36,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":39,"column":21,"nodeType":"82","messageId":"83","endLine":39,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":41,"column":21,"nodeType":"82","messageId":"83","endLine":41,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":49,"column":14,"nodeType":"82","messageId":"83","endLine":49,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":59,"column":35,"nodeType":"82","messageId":"83","endLine":59,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":72,"column":14,"nodeType":"82","messageId":"83","endLine":72,"endColumn":16},{"ruleId":"72","severity":1,"message":"84","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":21,"column":13,"nodeType":"74","messageId":"87","endLine":21,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":16,"column":34,"nodeType":"82","messageId":"83","endLine":16,"endColumn":36},"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'last' is assigned a value but never used.","'format' is defined but never used.","'parse' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'set' is defined but never used.","no-redeclare","'nm' is already defined.","redeclared"]