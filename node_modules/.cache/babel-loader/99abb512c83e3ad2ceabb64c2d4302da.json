{"ast":null,"code":"var _jsxFileName = \"/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Analysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport BothCharts from \"./BothCharts\";\nimport './style/display.css';\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [latestTime, setLatestTime] = useState(null);\n  const [latestTiredness, setLatestTiredness] = useState(\"\");\n  const [latestHeartbeat, setLatestHeartbeat] = useState(\"\");\n  const [last, setLast] = useState(null);\n  const port = \"8080\";\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:` + port + `/record/`);\n      //console.log(response);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n      console.log(records[records.length - 1]);\n      setLatestHeartbeat(records[records.length - 1].heartbeet);\n      setLatestTiredness(records[records.length - 1].tiredness);\n      setLast(String(records[records.length - 1].datetime));\n      const dateString = records[records.length - 1].datetime;\n      const date = parse(dateString, 'yyyyMMddHHmmss', new Date());\n      setLatestTime(date);\n      //console.log(date);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"50px\",\n      paddingInline: \"200px\",\n      backgroundColor: \"#eee\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#999\"\n        },\n        children: [\"Last Measured: \", latestTime === null ? \"\" : format(latestTime, 'EEEE, MMMM do, yyyy hh:mm a')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              padding: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Tiredness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: latestTiredness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              padding: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Hearbeat (BPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: latestHeartbeat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graphs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BothCharts, {\n        records: records,\n        range: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BothCharts, {\n        records: records,\n        range: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BothCharts, {\n        records: records,\n        range: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BothCharts, {\n        records: records,\n        range: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BothCharts, {\n        records: records,\n        range: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n\n//  // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\n// }\n_s(Display, \"yrZN41o/+j2jyva5MjIQyy+AbQo=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Card","BothCharts","format","parse","Display","records","setRecords","latestTime","setLatestTime","latestTiredness","setLatestTiredness","latestHeartbeat","setLatestHeartbeat","last","setLast","port","getRecords","response","fetch","ok","message","statusText","window","alert","json","console","log","length","heartbeet","tiredness","String","datetime","dateString","date","Date","padding","paddingInline","backgroundColor","color"],"sources":["/Users/umphaipunatipunumphai/Documents/NUS/ZingRingWeb/src/components/Analysis.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport BothCharts from \"./BothCharts\";\nimport './style/display.css';\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\n\nconst Display = () => {\n    const [records, setRecords] = useState([]);\n    const [latestTime, setLatestTime] = useState(null);\n    const [latestTiredness, setLatestTiredness] = useState(\"\");\n    const [latestHeartbeat, setLatestHeartbeat] = useState(\"\");\n    const [last, setLast] = useState(null);\n    const port = \"8080\";\n\n    useEffect(() => {\n        async function getRecords() {\n            const response = await fetch(`http://localhost:`+port+`/record/`);\n            //console.log(response);\n            if (!response.ok) {\n                const message = `An error occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const records = await response.json();\n            setRecords(records);\n            console.log(records[records.length-1]);\n            setLatestHeartbeat(records[records.length-1].heartbeet);\n            setLatestTiredness(records[records.length-1].tiredness);\n            setLast(String(records[records.length-1].datetime));\n            const dateString = records[records.length-1].datetime;\n            const date = parse(dateString, 'yyyyMMddHHmmss', new Date());\n            setLatestTime(date);\n            //console.log(date);\n        }\n        getRecords();\n        return;\n  }, [records.length]);\n\n      return (\n        <div style={{padding: \"50px\", paddingInline: \"200px\", backgroundColor: \"#eee\"}}>\n          <h1>Current Data</h1>\n          <Container>\n            <p style={{color: \"#999\"}}>Last Measured: {latestTime === null ? \"\" : format(latestTime, 'EEEE, MMMM do, yyyy hh:mm a')}</p>\n            <Row>\n              <Col sm={3}>\n                <Card style={{padding: \"30px\"}}>\n                  <Card.Title>Tiredness</Card.Title>\n                  <Card.Text>{latestTiredness}</Card.Text>\n                </Card>\n              </Col>\n              <Col sm={3}>\n                <Card style={{padding: \"30px\"}}>\n                  <Card.Title>Hearbeat (BPM)</Card.Title>\n                  <Card.Text>{latestHeartbeat}</Card.Text>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n          <h1>Graphs</h1>\n          <Container>\n            <BothCharts records={records} range=\"Day\"/>\n            <BothCharts records={records} range=\"Week\"/>\n            <BothCharts records={records} range=\"Month\"/>\n            <BothCharts records={records} range=\"Year\"/>\n            <BothCharts records={records} range=\"All\"/>\n        </Container>\n        </div>\n      );\n}\n \n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n \n//  // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\n// }\n\nexport default Display;"],"mappings":"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"},"metadata":{},"sourceType":"module"}