{"ast":null,"code":"var _jsxFileName = \"/Users/finnwintz/Documents/cs/cs3237/final_project/mern/client/src/components/Display.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PieGraph from \"./PieGraph\";\nimport LineGraph from \"./LineGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  // This method fetches the records from the database.\n  // console.log(\"yuh\");\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      console.log(response);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n      console.log(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PieGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n\n//  // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\n// }\n_s(Display, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useState","Link","PieGraph","LineGraph","Display","records","setRecords","getRecords","response","fetch","console","log","ok","message","statusText","window","alert","json","length"],"sources":["/Users/finnwintz/Documents/cs/cs3237/final_project/mern/client/src/components/Display.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PieGraph from \"./PieGraph\";\nimport LineGraph from \"./LineGraph\";\n\nconst Display = () => {\n    const [records, setRecords] = useState([]);\n    // This method fetches the records from the database.\n    // console.log(\"yuh\");\n    useEffect(() => {\n        async function getRecords() {\n            const response = await fetch(`http://localhost:5000/record/`);\n            console.log(response);\n            if (!response.ok) {\n                const message = `An error occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const records = await response.json();\n            setRecords(records);\n            console.log(records);\n        }\n        getRecords();\n        return;\n  }, [records.length]);\n      return (\n        <div>\n          <h3>Record List</h3>\n          <PieGraph />\n          <LineGraph />\n        </div>\n      );\n}\n \n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n \n//  // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\n// }\n\nexport default Display;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA;EACAD,SAAS,CAAC,MAAM;IACZ,eAAeQ,UAAU,GAAG;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAI,CAACA,QAAQ,CAACI,EAAE,EAAE;QACd,MAAMC,OAAO,GAAI,sBAAqBL,QAAQ,CAACM,UAAW,EAAC;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACJ;MACA,MAAMR,OAAO,GAAG,MAAMG,QAAQ,CAACS,IAAI,EAAE;MACrCX,UAAU,CAACD,OAAO,CAAC;MACnBK,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;IACxB;IACAE,UAAU,EAAE;IACZ;EACN,CAAC,EAAE,CAACF,OAAO,CAACa,MAAM,CAAC,CAAC;EAChB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACZ,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEd,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA5CMd,OAAO;AAAA,KAAPA,OAAO;AA8Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}