{"ast":null,"code":"var _jsxFileName = \"/Users/finnwintz/Documents/cs/cs3237/final_project/mern/client 2/src/components/recordList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.tiredness\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.heartbeet\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: \"7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 2\n}, this);\n_c = Record;\nexport default function RecordList() {\n  _s();\n  const [records, setRecords] = useState([]);\n  console.log(\"A\");\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      console.log(response);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    console.log(\"C\");\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this);\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  console.log(\"D\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tiredness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Heartbeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 4\n  }, this);\n}\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Record","props","record","tiredness","heartbeet","RecordList","records","setRecords","console","log","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","deleteRecord","id","method","newRecords","filter","el","_id","recordList","map","marginTop"],"sources":["/Users/finnwintz/Documents/cs/cs3237/final_project/mern/client 2/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n \nconst Record = (props) => (\n <tr>\n   <td>{props.record.tiredness}</td>\n   <td>{props.record.heartbeet}</td>\n   <td>7</td>\n   {/* <td>\n     <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n     <button className=\"btn btn-link\"\n       onClick={() => {\n         props.deleteRecord(props.record._id);\n       }}\n     >\n       Delete\n     </button>\n   </td> */}\n </tr>\n);\n \nexport default function RecordList() {\n const [records, setRecords] = useState([]);\n console.log(\"A\");\n // This method fetches the records from the database.\n useEffect(() => {\n   async function getRecords() {\n     const response = await fetch(`http://localhost:5000/record/`);\n    console.log(response);\n     if (!response.ok) {\n       const message = `An error occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const records = await response.json();\n     setRecords(records);\n   }\n \n   getRecords();\n \n   return;\n }, [records.length]);\n \n // This method will delete a record\n async function deleteRecord(id) {\n   await fetch(`http://localhost:5000/${id}`, {\n     method: \"DELETE\"\n   });\n \n   const newRecords = records.filter((el) => el._id !== id);\n   setRecords(newRecords);\n }\n \n // This method will map out the records on the table\n function recordList() {\n  console.log(\"C\");\n   return records.map((record) => {\n     return (\n       <Record\n         record={record}\n         deleteRecord={() => deleteRecord(record._id)}\n         key={record._id}\n       />\n     );\n   });\n }\n \n // This following section will display the table with the records of individuals.\n console.log(\"D\");\n return (\n   <div>\n     <h3>Record List</h3>\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n       <thead>\n         <tr>\n           <th>Tiredness</th>\n           <th>Heartbeat</th>\n           <th>Other</th>\n           {/* <th>Action</th> */}\n         </tr>\n       </thead>\n       <tbody>{recordList()}</tbody>\n     </table>\n   </div>\n );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,MAAM,GAAIC,KAAK,iBACpB;EAAA,wBACE;IAAA,UAAKA,KAAK,CAACC,MAAM,CAACC;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM,eACjC;IAAA,UAAKF,KAAK,CAACC,MAAM,CAACE;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM,eACjC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAU;AAAA;EAAA;EAAA;EAAA;AAAA,QAYZ;AAAC,KAhBIJ,MAAM;AAkBZ,eAAe,SAASK,UAAU,GAAG;EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1CU,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB;EACAZ,SAAS,CAAC,MAAM;IACd,eAAea,UAAU,GAAG;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,CAAC;MAC9DJ,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;MACpB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAAC;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMR,OAAO,GAAG,MAAMK,QAAQ,CAACO,IAAI,EAAE;MACrCX,UAAU,CAACD,OAAO,CAAC;IACrB;IAEAI,UAAU,EAAE;IAEZ;EACF,CAAC,EAAE,CAACJ,OAAO,CAACa,MAAM,CAAC,CAAC;;EAEpB;EACA,eAAeC,YAAY,CAACC,EAAE,EAAE;IAC9B,MAAMT,KAAK,CAAE,yBAAwBS,EAAG,EAAC,EAAE;MACzCC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGjB,OAAO,CAACkB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,GAAG,KAAKL,EAAE,CAAC;IACxDd,UAAU,CAACgB,UAAU,CAAC;EACxB;;EAEA;EACA,SAASI,UAAU,GAAG;IACrBnB,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IACf,OAAOH,OAAO,CAACsB,GAAG,CAAE1B,MAAM,IAAK;MAC7B,oBACE,QAAC,MAAM;QACL,MAAM,EAAEA,MAAO;QACf,YAAY,EAAE,MAAMkB,YAAY,CAAClB,MAAM,CAACwB,GAAG;MAAE,GACxCxB,MAAM,CAACwB,GAAG;QAAA;QAAA;QAAA;MAAA,QACf;IAEN,CAAC,CAAC;EACJ;;EAEA;EACAlB,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAO,SAAS,EAAC,qBAAqB;MAAC,KAAK,EAAE;QAAEoB,SAAS,EAAE;MAAG,CAAE;MAAA,wBAC9D;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB,eAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB,eAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc;QAAA;UAAA;UAAA;UAAA;QAAA;MAEX;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAAQF,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAET;AAAC,GAjEuBtB,UAAU;AAAA,MAAVA,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}